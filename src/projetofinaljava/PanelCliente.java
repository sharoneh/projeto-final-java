/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetofinaljava;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author sharonhasegawa
 */
public class PanelCliente extends javax.swing.JPanel {
    ModeloTabelaCliente modeloTabelaCliente = new ModeloTabelaCliente();
    int linhaSelecionada = -1;
    Cliente clienteSelecionado;

    /**
     * Creates new form PanelCliente
     */
    public PanelCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listarClientes = new javax.swing.JButton();
        excluirCliente = new javax.swing.JButton();
        limparListaClientes = new javax.swing.JButton();
        cpfLabel = new javax.swing.JLabel();
        caixaCpf = new javax.swing.JTextField();
        nomeLabel = new javax.swing.JLabel();
        caixaNome = new javax.swing.JTextField();
        sobrenomeLabel = new javax.swing.JLabel();
        caixaSobrenome = new javax.swing.JTextField();
        novoCliente = new javax.swing.JButton();
        atualizaCliente = new javax.swing.JButton();
        scrolTabelaCliente = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();

        listarClientes.setText("Listar");
        listarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarClientesActionPerformed(evt);
            }
        });

        excluirCliente.setText("Excluir");
        excluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirClienteActionPerformed(evt);
            }
        });

        limparListaClientes.setText("Limpar");
        limparListaClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparListaClientesActionPerformed(evt);
            }
        });

        cpfLabel.setText("CPF:");

        nomeLabel.setText("Nome:");

        sobrenomeLabel.setText("Sobrenome:");

        novoCliente.setText("Novo");
        novoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoClienteActionPerformed(evt);
            }
        });

        atualizaCliente.setText("Atualizar");
        atualizaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaClienteActionPerformed(evt);
            }
        });

        tabelaCliente.setModel(modeloTabelaCliente);
        tabelaCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabelaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaClienteMousePressed(evt);
            }
        });
        scrolTabelaCliente.setViewportView(tabelaCliente);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrolTabelaCliente)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(novoCliente)
                                .addGap(18, 18, 18)
                                .addComponent(atualizaCliente))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sobrenomeLabel)
                                    .addComponent(nomeLabel)
                                    .addComponent(cpfLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(caixaCpf)
                                    .addComponent(caixaNome)
                                    .addComponent(caixaSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(listarClientes)
                                .addGap(18, 18, 18)
                                .addComponent(excluirCliente)
                                .addGap(18, 18, 18)
                                .addComponent(limparListaClientes)))
                        .addGap(0, 283, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrolTabelaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listarClientes)
                    .addComponent(excluirCliente)
                    .addComponent(limparListaClientes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfLabel)
                    .addComponent(caixaCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabel)
                    .addComponent(caixaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sobrenomeLabel)
                    .addComponent(caixaSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(novoCliente)
                    .addComponent(atualizaCliente))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarClientesActionPerformed
        try {
            List<Cliente> lista = new ClienteDAO().getLista();
            modeloTabelaCliente.setListaClientes(lista);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_listarClientesActionPerformed

    private void excluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirClienteActionPerformed
        try {
            ClienteDAO c = new ClienteDAO();
            int[] linhasSelecionadas = tabelaCliente.getSelectedRows();
            List<Cliente> listaExcluir = new ArrayList();

            for (int i = 0; i < linhasSelecionadas.length; i++) {
                Cliente cliente = modeloTabelaCliente.getCliente(linhasSelecionadas[i]);
                c.deleta(cliente);
                listaExcluir.add(cliente);
            }

            for (Cliente cliente : listaExcluir) {
                modeloTabelaCliente.deleteCliente(cliente);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_excluirClienteActionPerformed

    private void limparListaClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparListaClientesActionPerformed
        try {
            modeloTabelaCliente.limparTabela();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_limparListaClientesActionPerformed

    private void novoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoClienteActionPerformed
        try {
            String cpf = caixaCpf.getText();
            String nome = caixaNome.getText();
            String sobrenome = caixaSobrenome.getText();

            Cliente c = new Cliente(0L, cpf, nome, sobrenome);
            ClienteDAO dao = new ClienteDAO();
            dao.insere(c);
            modeloTabelaCliente.adicionaCliente(c);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_novoClienteActionPerformed

    private void atualizaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaClienteActionPerformed
        if (linhaSelecionada == -1) return;
        try {
            this.clienteSelecionado.setCpf(caixaCpf.getText());
            this.clienteSelecionado.setNome(caixaNome.getText());
            this.clienteSelecionado.setSobrenome(caixaSobrenome.getText());

            ClienteDAO dao = null;
            dao = new ClienteDAO();
            dao.atualiza(clienteSelecionado);

            modeloTabelaCliente.fireTableRowsUpdated(linhaSelecionada, linhaSelecionada);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_atualizaClienteActionPerformed

    private void tabelaClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaClienteMousePressed
        this.linhaSelecionada = tabelaCliente.rowAtPoint(evt.getPoint());
        this.clienteSelecionado = modeloTabelaCliente.getCliente(this.linhaSelecionada);
        
        caixaCpf.setText(this.clienteSelecionado.getCpf());
        caixaNome.setText(this.clienteSelecionado.getNome());
        caixaSobrenome.setText(this.clienteSelecionado.getSobrenome());
    }//GEN-LAST:event_tabelaClienteMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizaCliente;
    private javax.swing.JTextField caixaCpf;
    private javax.swing.JTextField caixaNome;
    private javax.swing.JTextField caixaSobrenome;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JButton excluirCliente;
    private javax.swing.JButton limparListaClientes;
    private javax.swing.JButton listarClientes;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JButton novoCliente;
    private javax.swing.JScrollPane scrolTabelaCliente;
    private javax.swing.JLabel sobrenomeLabel;
    private javax.swing.JTable tabelaCliente;
    // End of variables declaration//GEN-END:variables
}
